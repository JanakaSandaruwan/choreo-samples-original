# +required The configuration file schema version
# +required The configuration file schema version
schemaVersion: 1.2

# +optional Incoming connection details for the component
endpoints:
  # +required Unique name for the endpoint.
  # This name will be used when generating the managed API
  - name: component-greeter-90
    # +optional Display name for the endpoint.
    displayName: 9090 Component Yaml
    # +required Service section has the user service endpoint details
    service:
      # +optional Base path of the API that gets exposed via the endpoint.
      # This is mandatory if the endpoint type is set to REST or GraphQL.
      basePath: /
      # +required Numeric port value that gets exposed via the endpoint
      port: 9090
    # +required Type of traffic that the endpoint is accepting.
    # Allowed values: REST, GraphQL, GRPC, TCP, UDP.
    type: REST
    # +optional Network level visibilities of the endpoint.
    # Takes priority over networkVisibility if defined.
    # Accepted values: Project|Organization|Public(Default).
    networkVisibilities:
      - Public
    # +optional The path to the schema definition file.
    # Defaults to wildcard route if not specified.
    # This is only applicable to REST endpoint types.
    # The path should be relative to the docker context.
    schemaFilePath: openapi.yaml

configurations:
  env:
    - name: REDIS_URL
      valueFrom:
        configForm: {}
    - name: DB_USER
      valueFrom:
        configForm:
          displayName: DB User
          required: true
    - name: DB_PASSWORD
      valueFrom:
        configForm:
          displayName: DB Password
          type: secret
    - name: FEATURE_FLAG
      valueFrom:
        configForm: 
          displayName: Feature Flag
          type: boolean
  file:
    - name: application.yaml
      mountPath: /src/resources
      type: yaml
      values:
        - name: logging
          valueFrom:
            configForm:
              displayName: Logging
              type: object
              properties:
                - name: logger_name
                  displayName: Logger Name
                - name: level
                  displayName: Level
                  values: #restricted values | enum
                    - info
                    - debug
        - name: coordinations
          type: array
          items:
            type: array
            items:
              type: number
        - name: users
          valueFrom:
            configForm:
              type: object
              displayName: User List
              required: false
              properties:
                - name: user
                  displayName: User
                  type: array
                  items:
                    type: object
                    properties:
                      - name: name
                      - name: description
                        required: false
                      - name: age
                        type: number
                      - name: address
                        type: object
                        properties:
                          - name: street
                          - name: city
    - name: application.json
      mountPath: /src/resources
      type: json
      values:
          - name: version
            valueFrom:
              configForm:
                displayName: Version
                type: number
          - name: upstream
            valueFrom:
              configForm:
                displayName: Upstream Service
                type: object
                properties:
                  - name: host
                    displayName: Host
                  - name: port
                    displayName: Port
                    type: number
    - name: application.toml
      mountPath: /src/resources
      type: toml
      values:
        # map<string>
        - name: headers
          valueFrom:
            configForm:
              displayName: Headers
              type: map
              required: true
              properties: # Properties for the map values
                type: string
        
        # map<object>
        - name: databaseMap
          valueFrom:
            configForm:
              displayName: Database Configuration
              type: map
              required: false
              properties: # Properties for the map values
                type: object
                additionalProperties:
                  - name: host
                    type: string
                    displayName: Host
                    required: false
                  - name: port
                    type: number
                    displayName: Port
                  - name: username
                    type: string
                    displayName: Username
                  - name: password
                    type: secret
                    displayName: Password
                  - name: test
                    type: object
                    displayName: Test Object
                    properties:
                      - name: testProperty
                        type: string
                      - name: testNumber
                        type: number
          
          # map<string[]>
        - name: features
          valueFrom:
            configForm:
              displayName: Features
              type: map
              required: true
              properties: # Properties for the map values
                  type: array
                  items:
                    type: string
      
         # type union string|number
        - name: retryPolicy
          valueFrom:
            configForm:
              displayName: Retry Policy
              oneOf:
                - type: string
                - type: number
        
        # type union object|object
        - name: key
          valueFrom:
            configForm:
              displayName: Secure Socket Key
              oneOf:
                - type: object
                  name: keystore
                  properties:
                    - name: path
                      type: string
                      displayName: Key Store path
                    - name: password
                      type: string
                      displayName: Keystore password
                - type: object
                  name: ssl
                  properties:
                    - name: certFile
                      type: string
                    - name: keyFile
                      type: string
                    - name: keyPassword
                      type: string
